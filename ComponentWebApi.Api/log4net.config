<?xml version="1.0" encoding="utf-8"?>

<log4net>
    <!-- 日志记录的相关配置，可以针对不同记录方式和级别，配置多个appender节点 -->
    <appender name="LogConfig" type="log4net.Appender.RollingFileAppender">
        <!-- 日志文件保存位置，可以相对路径也可以绝对路径，注意这里是斜杠而不是反斜杠 -->
        <file value="logs/" />
        <!-- 文件的命名规则，此处为日期加.log后缀 -->
        <datePattern value="yyyy-MM-dd'.log'" />
        <appendToFile value="true" />
        <rollingStyle value="Size" />
        <maxSizeRollBackups value="100" />
        <maximumFileSize value="3MB" />
        <!-- 按日期保存 -->
        <rollingStyle value="Date" />
        <!-- 静态文件名设为false -->
        <staticLogFileName value="false" />
        <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern
                value="%newline%newline【日志时间】：%d  %newline【日志级别】：%-5p  %newline【日志对象】：%logger  %newline【日志内容】：%m%newline" />
        </layout>
        <filter type="log4net.Filter.LevelRangeFilter">
            <!--设置该日志文件将记录的日志级别区间，如果希望每个级别都分开一个文件记录，可以将appender节点配置多个，设置不同的记录级别-->
            <param name="LevelMin" value="Error" />
            <param name="LevelMax" value="Fatal" />
        </filter>
    </appender>

    <root>
        <!--控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF
        比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录
        如果没有定义LEVEL的值，则缺省为DEBUG-->
        <!--注意，当配置多个不同日志级别的appender节点时，务必按以下级别顺序排列appender-ref节点，否则低级别将不会执行-->
        <!--All -> Debug -> Info -> Warn -> Error -> Fatal -> Off-->
        <appender-ref ref="LogConfig" />
        <level value="DEBUG" />
    </root>
</log4net>